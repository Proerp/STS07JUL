<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="ListMaintenance" targetNamespace="http://tempuri.org/ListMaintenance.xsd" xmlns:mstns="http://tempuri.org/ListMaintenance.xsd" xmlns="http://tempuri.org/ListMaintenance.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="ImageS8SongThanConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="ImageS8SongThanConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.DataAccessLayer.Properties.Settings.GlobalReference.Default.ImageS8SongThanConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ListCategoryTableAdapter" GeneratorDataComponentClassName="ListCategoryTableAdapter" Name="ListCategory" UserDataComponentName="ListCategoryTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ImageS8SongThanConnectionString (Settings)" DbObjectName="ImageS8SongThan.dbo.ListCategory" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [ListCategory] WHERE (([CategoryID] = @Original_CategoryID) AND ([Description] = @Original_Description) AND ([LogoGenerator] = @Original_LogoGenerator) AND ([EntryDate] = @Original_EntryDate))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CategoryID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CategoryID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_LogoGenerator" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LogoGenerator" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_EntryDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="EntryDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [ListCategory] ([Description], [LogoGenerator], [EntryDate]) VALUES (@Description, @LogoGenerator, @EntryDate);
SELECT CategoryID, Description, LogoGenerator, EntryDate FROM ListCategory WHERE (CategoryID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@LogoGenerator" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LogoGenerator" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@EntryDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="EntryDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        CategoryID, Description, LogoGenerator, EntryDate
FROM            ListCategory</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [ListCategory] SET [Description] = @Description, [LogoGenerator] = @LogoGenerator, [EntryDate] = @EntryDate WHERE (([CategoryID] = @Original_CategoryID) AND ([Description] = @Original_Description) AND ([LogoGenerator] = @Original_LogoGenerator) AND ([EntryDate] = @Original_EntryDate));
SELECT CategoryID, Description, LogoGenerator, EntryDate FROM ListCategory WHERE (CategoryID = @CategoryID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@LogoGenerator" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LogoGenerator" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@EntryDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="EntryDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CategoryID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CategoryID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_LogoGenerator" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LogoGenerator" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_EntryDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="EntryDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="CategoryID" ColumnName="CategoryID" DataSourceName="ImageS8SongThan.dbo.ListCategory" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@CategoryID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="CategoryID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="CategoryID" DataSetColumn="CategoryID" />
              <Mapping SourceColumn="Description" DataSetColumn="Description" />
              <Mapping SourceColumn="LogoGenerator" DataSetColumn="LogoGenerator" />
              <Mapping SourceColumn="EntryDate" DataSetColumn="EntryDate" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ListFactoryTableAdapter" GeneratorDataComponentClassName="ListFactoryTableAdapter" Name="ListFactory" UserDataComponentName="ListFactoryTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ImageS8SongThanConnectionString (Settings)" DbObjectName="ImageS8SongThan.dbo.ListFactory" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [ListFactory] WHERE (([FactoryID] = @Original_FactoryID) AND ([Description] = @Original_Description) AND ([LogoGenerator] = @Original_LogoGenerator) AND ([EntryDate] = @Original_EntryDate))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_FactoryID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="FactoryID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_LogoGenerator" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LogoGenerator" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_EntryDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="EntryDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [ListFactory] ([Description], [LogoGenerator], [EntryDate]) VALUES (@Description, @LogoGenerator, @EntryDate);
SELECT FactoryID, Description, LogoGenerator, EntryDate FROM ListFactory WHERE (FactoryID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@LogoGenerator" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LogoGenerator" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@EntryDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="EntryDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        FactoryID, Description, LogoGenerator, EntryDate
FROM            ListFactory</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [ListFactory] SET [Description] = @Description, [LogoGenerator] = @LogoGenerator, [EntryDate] = @EntryDate WHERE (([FactoryID] = @Original_FactoryID) AND ([Description] = @Original_Description) AND ([LogoGenerator] = @Original_LogoGenerator) AND ([EntryDate] = @Original_EntryDate));
SELECT FactoryID, Description, LogoGenerator, EntryDate FROM ListFactory WHERE (FactoryID = @FactoryID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@LogoGenerator" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LogoGenerator" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@EntryDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="EntryDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_FactoryID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="FactoryID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_LogoGenerator" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LogoGenerator" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_EntryDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="EntryDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="FactoryID" ColumnName="FactoryID" DataSourceName="ImageS8SongThan.dbo.ListFactory" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@FactoryID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="FactoryID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="FactoryID" DataSetColumn="FactoryID" />
              <Mapping SourceColumn="Description" DataSetColumn="Description" />
              <Mapping SourceColumn="LogoGenerator" DataSetColumn="LogoGenerator" />
              <Mapping SourceColumn="EntryDate" DataSetColumn="EntryDate" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ListOwnerTableAdapter" GeneratorDataComponentClassName="ListOwnerTableAdapter" Name="ListOwner" UserDataComponentName="ListOwnerTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ImageS8SongThanConnectionString (Settings)" DbObjectName="ImageS8SongThan.dbo.ListOwner" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [ListOwner] WHERE (([OwnerID] = @Original_OwnerID) AND ([Description] = @Original_Description) AND ([LogoGenerator] = @Original_LogoGenerator) AND ([EntryDate] = @Original_EntryDate))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_OwnerID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="OwnerID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_LogoGenerator" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LogoGenerator" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_EntryDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="EntryDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [ListOwner] ([Description], [LogoGenerator], [EntryDate]) VALUES (@Description, @LogoGenerator, @EntryDate);
SELECT OwnerID, Description, LogoGenerator, EntryDate FROM ListOwner WHERE (OwnerID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@LogoGenerator" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LogoGenerator" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@EntryDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="EntryDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        OwnerID, Description, LogoGenerator, EntryDate
FROM            ListOwner</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [ListOwner] SET [Description] = @Description, [LogoGenerator] = @LogoGenerator, [EntryDate] = @EntryDate WHERE (([OwnerID] = @Original_OwnerID) AND ([Description] = @Original_Description) AND ([LogoGenerator] = @Original_LogoGenerator) AND ([EntryDate] = @Original_EntryDate));
SELECT OwnerID, Description, LogoGenerator, EntryDate FROM ListOwner WHERE (OwnerID = @OwnerID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@LogoGenerator" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LogoGenerator" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@EntryDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="EntryDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_OwnerID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="OwnerID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_LogoGenerator" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LogoGenerator" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_EntryDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="EntryDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="OwnerID" ColumnName="OwnerID" DataSourceName="ImageS8SongThan.dbo.ListOwner" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@OwnerID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="OwnerID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="OwnerID" DataSetColumn="OwnerID" />
              <Mapping SourceColumn="Description" DataSetColumn="Description" />
              <Mapping SourceColumn="LogoGenerator" DataSetColumn="LogoGenerator" />
              <Mapping SourceColumn="EntryDate" DataSetColumn="EntryDate" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ListProductTableAdapter" GeneratorDataComponentClassName="ListProductTableAdapter" Name="ListProduct" UserDataComponentName="ListProductTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ImageS8SongThanConnectionString (Settings)" DbObjectName="ImageS8SongThan.dbo.ListProduct" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [ListProduct] WHERE (([ProductID] = @Original_ProductID) AND ([Description] = @Original_Description) AND ([LogoGenerator] = @Original_LogoGenerator) AND ([EntryDate] = @Original_EntryDate))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ProductID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ProductID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_LogoGenerator" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LogoGenerator" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_EntryDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="EntryDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [ListProduct] ([Description], [LogoGenerator], [EntryDate]) VALUES (@Description, @LogoGenerator, @EntryDate);
SELECT ProductID, Description, LogoGenerator, EntryDate FROM ListProduct WHERE (ProductID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@LogoGenerator" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LogoGenerator" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@EntryDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="EntryDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        ProductID, Description, LogoGenerator, EntryDate
FROM            ListProduct</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [ListProduct] SET [Description] = @Description, [LogoGenerator] = @LogoGenerator, [EntryDate] = @EntryDate WHERE (([ProductID] = @Original_ProductID) AND ([Description] = @Original_Description) AND ([LogoGenerator] = @Original_LogoGenerator) AND ([EntryDate] = @Original_EntryDate));
SELECT ProductID, Description, LogoGenerator, EntryDate FROM ListProduct WHERE (ProductID = @ProductID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@LogoGenerator" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LogoGenerator" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@EntryDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="EntryDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ProductID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ProductID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_LogoGenerator" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LogoGenerator" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_EntryDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="EntryDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ProductID" ColumnName="ProductID" DataSourceName="ImageS8SongThan.dbo.ListProduct" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ProductID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ProductID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ProductID" DataSetColumn="ProductID" />
              <Mapping SourceColumn="Description" DataSetColumn="Description" />
              <Mapping SourceColumn="LogoGenerator" DataSetColumn="LogoGenerator" />
              <Mapping SourceColumn="EntryDate" DataSetColumn="EntryDate" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ListLogoTableAdapter" GeneratorDataComponentClassName="ListLogoTableAdapter" Name="ListLogo" UserDataComponentName="ListLogoTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ImageS8SongThanConnectionString (Settings)" DbObjectName="ImageS8SongThan.dbo.ListLogo" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [ListLogo] WHERE (([LogoID] = @Original_LogoID) AND ([Description] = @Original_Description) AND ([LogoGenerator] = @Original_LogoGenerator) AND ([EntryDate] = @Original_EntryDate))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LogoID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LogoID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_LogoGenerator" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LogoGenerator" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_EntryDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="EntryDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [ListLogo] ([Description], [LogoGenerator], [EntryDate]) VALUES (@Description, @LogoGenerator, @EntryDate);
SELECT LogoID, Description, LogoGenerator, EntryDate FROM ListLogo WHERE (LogoID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@LogoGenerator" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LogoGenerator" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@EntryDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="EntryDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        LogoID, Description, LogoGenerator, EntryDate
FROM            ListLogo</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [ListLogo] SET [Description] = @Description, [LogoGenerator] = @LogoGenerator, [EntryDate] = @EntryDate WHERE (([LogoID] = @Original_LogoID) AND ([Description] = @Original_Description) AND ([LogoGenerator] = @Original_LogoGenerator) AND ([EntryDate] = @Original_EntryDate));
SELECT LogoID, Description, LogoGenerator, EntryDate FROM ListLogo WHERE (LogoID = @LogoID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@LogoGenerator" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LogoGenerator" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@EntryDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="EntryDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LogoID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LogoID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_LogoGenerator" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LogoGenerator" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_EntryDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="EntryDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="LogoID" ColumnName="LogoID" DataSourceName="ImageS8SongThan.dbo.ListLogo" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@LogoID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="LogoID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="LogoID" DataSetColumn="LogoID" />
              <Mapping SourceColumn="Description" DataSetColumn="Description" />
              <Mapping SourceColumn="LogoGenerator" DataSetColumn="LogoGenerator" />
              <Mapping SourceColumn="EntryDate" DataSetColumn="EntryDate" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ListStaffNameTableAdapter" GeneratorDataComponentClassName="ListStaffNameTableAdapter" Name="ListStaffName" UserDataComponentName="ListStaffNameTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ImageS8SongThanConnectionString (Settings)" DbObjectName="ImageS8SongThan.dbo.ListStaffName" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [ListStaffName] WHERE (([StaffID] = @Original_StaffID) AND ([Description] = @Original_Description) AND ([DescriptionOfficial] = @Original_DescriptionOfficial))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StaffID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StaffID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_DescriptionOfficial" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="DescriptionOfficial" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [ListStaffName] ([Description], [DescriptionOfficial]) VALUES (@Description, @DescriptionOfficial);
SELECT StaffID, Description, DescriptionOfficial FROM ListStaffName WHERE (StaffID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@DescriptionOfficial" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="DescriptionOfficial" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        StaffID, Description, DescriptionOfficial
FROM            ListStaffName</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [ListStaffName] SET [Description] = @Description, [DescriptionOfficial] = @DescriptionOfficial WHERE (([StaffID] = @Original_StaffID) AND ([Description] = @Original_Description) AND ([DescriptionOfficial] = @Original_DescriptionOfficial));
SELECT StaffID, Description, DescriptionOfficial FROM ListStaffName WHERE (StaffID = @StaffID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@DescriptionOfficial" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="DescriptionOfficial" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StaffID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StaffID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_DescriptionOfficial" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="DescriptionOfficial" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="StaffID" ColumnName="StaffID" DataSourceName="ImageS8SongThan.dbo.ListStaffName" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@StaffID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="StaffID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="StaffID" DataSetColumn="StaffID" />
              <Mapping SourceColumn="Description" DataSetColumn="Description" />
              <Mapping SourceColumn="DescriptionOfficial" DataSetColumn="DescriptionOfficial" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ListDataStatusTableAdapter" GeneratorDataComponentClassName="ListDataStatusTableAdapter" Name="ListDataStatus" UserDataComponentName="ListDataStatusTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ImageS8SongThanConnectionString (Settings)" DbObjectName="ImageS8SongThan.dbo.ListDataStatus" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [ListDataStatus] WHERE (([DataStatusID] = @Original_DataStatusID) AND ([Description] = @Original_Description) AND ([EntryDate] = @Original_EntryDate))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_DataStatusID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DataStatusID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_EntryDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="EntryDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        DataStatusID, Description, EntryDate
FROM            ListDataStatus</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [ListDataStatus] SET [Description] = @Description, [EntryDate] = @EntryDate WHERE (([DataStatusID] = @Original_DataStatusID) AND ([Description] = @Original_Description) AND ([EntryDate] = @Original_EntryDate));
SELECT DataStatusID, Description, EntryDate FROM ListDataStatus WHERE (DataStatusID = @DataStatusID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@EntryDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="EntryDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_DataStatusID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DataStatusID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_EntryDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="EntryDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="DataStatusID" ColumnName="DataStatusID" DataSourceName="ImageS8SongThan.dbo.ListDataStatus" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@DataStatusID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="DataStatusID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="DataStatusID" DataSetColumn="DataStatusID" />
              <Mapping SourceColumn="Description" DataSetColumn="Description" />
              <Mapping SourceColumn="EntryDate" DataSetColumn="EntryDate" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="ImageS8SongThanConnectionString (Settings)" DbObjectName="ImageS8SongThan.dbo.ListDataStatus" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByDataStatusID" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByDataStatusID" GeneratorSourceName="FillByDataStatusID" GetMethodModifier="Public" GetMethodName="GetDataByDataStatusID" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByDataStatusID" UserSourceName="FillByDataStatusID">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        DataStatusID, Description, EntryDate
FROM            ListDataStatus
WHERE DataStatusID = @DataStatusID</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="DataStatusID" ColumnName="DataStatusID" DataSourceName="ImageS8SongThan.dbo.ListDataStatus" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@DataStatusID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="DataStatusID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ListCoilTableAdapter" GeneratorDataComponentClassName="ListCoilTableAdapter" Name="ListCoil" UserDataComponentName="ListCoilTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ImageS8SongThanConnectionString (Settings)" DbObjectName="ImageS8SongThan.dbo.ListCoilListing" DbObjectType="StoredProcedure" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="StoredProcedure" ModifiedByUser="false">
                    <CommandText>dbo.ListCoilListing</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="ReturnValue" ParameterName="@RETURN_VALUE" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@LowerFillterDate" Precision="23" ProviderType="DateTime" Scale="3" Size="8" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@UpperFillterDate" Precision="23" ProviderType="DateTime" Scale="3" Size="8" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="CoilID" DataSetColumn="CoilID" />
              <Mapping SourceColumn="Description" DataSetColumn="Description" />
              <Mapping SourceColumn="EntryDate" DataSetColumn="EntryDate" />
              <Mapping SourceColumn="Remarks" DataSetColumn="Remarks" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PublicTableUploadTableAdapter" GeneratorDataComponentClassName="PublicTableUploadTableAdapter" Name="PublicTableUpload" UserDataComponentName="PublicTableUploadTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ImageS8SongThanConnectionString (Settings)" DbObjectName="ImageS8SongThan.dbo.PublicTableUpload" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [PublicTableUpload] WHERE (([TableID] = @Original_TableID) AND ([TableName] = @Original_TableName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TableID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TableID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_TableName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TableName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [PublicTableUpload] ([TableName]) VALUES (@TableName);
SELECT TableID, TableName FROM PublicTableUpload WHERE (TableID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TableName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TableName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        TableID, TableName
FROM            PublicTableUpload</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [PublicTableUpload] SET [TableName] = @TableName WHERE (([TableID] = @Original_TableID) AND ([TableName] = @Original_TableName));
SELECT TableID, TableName FROM PublicTableUpload WHERE (TableID = @TableID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TableName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TableName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TableID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TableID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_TableName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TableName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="TableID" ColumnName="TableID" DataSourceName="ImageS8SongThan.dbo.PublicTableUpload" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@TableID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="TableID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TableID" DataSetColumn="TableID" />
              <Mapping SourceColumn="TableName" DataSetColumn="TableName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ListEmployeeTableAdapter" GeneratorDataComponentClassName="ListEmployeeTableAdapter" Name="ListEmployee" UserDataComponentName="ListEmployeeTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ImageS8SongThanConnectionString (Settings)" DbObjectName="ImageS8SongThan.dbo.ListEmployee" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [ListEmployee] WHERE (([EmployeeID] = @Original_EmployeeID) AND ([Description] = @Original_Description) AND ([EntryDate] = @Original_EntryDate) AND ([Remarks] = @Original_Remarks) AND ([Password] = @Original_Password) AND ([UserID] = @Original_UserID) AND ([UserOrganizationID] = @Original_UserOrganizationID) AND ([EntryStatusID] = @Original_EntryStatusID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_EmployeeID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EmployeeID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_EntryDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="EntryDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Remarks" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Remarks" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserOrganizationID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserOrganizationID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_EntryStatusID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EntryStatusID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [ListEmployee] ([Description], [EntryDate], [Remarks], [Password], [UserID], [UserOrganizationID], [EntryStatusID]) VALUES (@Description, @EntryDate, @Remarks, @Password, @UserID, @UserOrganizationID, @EntryStatusID);
SELECT EmployeeID, Description, EntryDate, Remarks, Password, UserID, UserOrganizationID, EntryStatusID FROM ListEmployee WHERE (EmployeeID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@EntryDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="EntryDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Remarks" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Remarks" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@UserID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@UserOrganizationID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserOrganizationID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@EntryStatusID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EntryStatusID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        EmployeeID, Description, EntryDate, Remarks, Password, UserID, UserOrganizationID, EntryStatusID
FROM            ListEmployee</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [ListEmployee] SET [Description] = @Description, [EntryDate] = @EntryDate, [Remarks] = @Remarks, [Password] = @Password, [UserID] = @UserID, [UserOrganizationID] = @UserOrganizationID, [EntryStatusID] = @EntryStatusID WHERE (([EmployeeID] = @Original_EmployeeID) AND ([Description] = @Original_Description) AND ([EntryDate] = @Original_EntryDate) AND ([Remarks] = @Original_Remarks) AND ([Password] = @Original_Password) AND ([UserID] = @Original_UserID) AND ([UserOrganizationID] = @Original_UserOrganizationID) AND ([EntryStatusID] = @Original_EntryStatusID));
SELECT EmployeeID, Description, EntryDate, Remarks, Password, UserID, UserOrganizationID, EntryStatusID FROM ListEmployee WHERE (EmployeeID = @EmployeeID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@EntryDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="EntryDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Remarks" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Remarks" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@UserID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@UserOrganizationID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserOrganizationID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@EntryStatusID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EntryStatusID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_EmployeeID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EmployeeID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_EntryDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="EntryDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Remarks" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Remarks" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserOrganizationID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserOrganizationID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_EntryStatusID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EntryStatusID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="EmployeeID" ColumnName="EmployeeID" DataSourceName="ImageS8SongThan.dbo.ListEmployee" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@EmployeeID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="EmployeeID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="EmployeeID" DataSetColumn="EmployeeID" />
              <Mapping SourceColumn="Description" DataSetColumn="Description" />
              <Mapping SourceColumn="EntryDate" DataSetColumn="EntryDate" />
              <Mapping SourceColumn="Remarks" DataSetColumn="Remarks" />
              <Mapping SourceColumn="Password" DataSetColumn="Password" />
              <Mapping SourceColumn="UserID" DataSetColumn="UserID" />
              <Mapping SourceColumn="UserOrganizationID" DataSetColumn="UserOrganizationID" />
              <Mapping SourceColumn="EntryStatusID" DataSetColumn="EntryStatusID" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="ImageS8SongThanConnectionString (Settings)" DbObjectName="ImageS8SongThan.dbo.ListEmployee" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByEmployeeID" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByEmployeeID" GeneratorSourceName="FillByEmployeeID" GetMethodModifier="Public" GetMethodName="GetDataByEmployeeID" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByEmployeeID" UserSourceName="FillByEmployeeID">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        EmployeeID, Description, EntryDate, Remarks, Password, UserID, UserOrganizationID, EntryStatusID
FROM            ListEmployee
WHERE EmployeeID = @EmployeeID</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="EmployeeID" ColumnName="EmployeeID" DataSourceName="ImageS8SongThan.dbo.ListEmployee" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@EmployeeID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="EmployeeID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="ListMaintenance" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="ListMaintenance" msprop:Generator_UserDSName="ListMaintenance">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="ListCategory" msprop:Generator_TableClassName="ListCategoryDataTable" msprop:Generator_TableVarName="tableListCategory" msprop:Generator_TablePropName="ListCategory" msprop:Generator_RowDeletingName="ListCategoryRowDeleting" msprop:Generator_UserTableName="ListCategory" msprop:Generator_RowChangingName="ListCategoryRowChanging" msprop:Generator_RowEvHandlerName="ListCategoryRowChangeEventHandler" msprop:Generator_RowDeletedName="ListCategoryRowDeleted" msprop:Generator_RowEvArgName="ListCategoryRowChangeEvent" msprop:Generator_RowChangedName="ListCategoryRowChanged" msprop:Generator_RowClassName="ListCategoryRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="CategoryID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnCategoryID" msprop:Generator_ColumnPropNameInRow="CategoryID" msprop:Generator_ColumnPropNameInTable="CategoryIDColumn" msprop:Generator_UserColumnName="CategoryID" type="xs:int" />
              <xs:element name="Description" msprop:Generator_ColumnVarNameInTable="columnDescription" msprop:Generator_ColumnPropNameInRow="Description" msprop:Generator_ColumnPropNameInTable="DescriptionColumn" msprop:Generator_UserColumnName="Description">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="LogoGenerator" msprop:Generator_ColumnVarNameInTable="columnLogoGenerator" msprop:Generator_ColumnPropNameInRow="LogoGenerator" msprop:Generator_ColumnPropNameInTable="LogoGeneratorColumn" msprop:Generator_UserColumnName="LogoGenerator">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="EntryDate" msprop:Generator_ColumnVarNameInTable="columnEntryDate" msprop:Generator_ColumnPropNameInRow="EntryDate" msprop:Generator_ColumnPropNameInTable="EntryDateColumn" msprop:Generator_UserColumnName="EntryDate" type="xs:dateTime" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ListFactory" msprop:Generator_TableClassName="ListFactoryDataTable" msprop:Generator_TableVarName="tableListFactory" msprop:Generator_TablePropName="ListFactory" msprop:Generator_RowDeletingName="ListFactoryRowDeleting" msprop:Generator_UserTableName="ListFactory" msprop:Generator_RowChangingName="ListFactoryRowChanging" msprop:Generator_RowEvHandlerName="ListFactoryRowChangeEventHandler" msprop:Generator_RowDeletedName="ListFactoryRowDeleted" msprop:Generator_RowEvArgName="ListFactoryRowChangeEvent" msprop:Generator_RowChangedName="ListFactoryRowChanged" msprop:Generator_RowClassName="ListFactoryRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="FactoryID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnFactoryID" msprop:Generator_ColumnPropNameInRow="FactoryID" msprop:Generator_ColumnPropNameInTable="FactoryIDColumn" msprop:Generator_UserColumnName="FactoryID" type="xs:int" />
              <xs:element name="Description" msprop:Generator_ColumnVarNameInTable="columnDescription" msprop:Generator_ColumnPropNameInRow="Description" msprop:Generator_ColumnPropNameInTable="DescriptionColumn" msprop:Generator_UserColumnName="Description">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="LogoGenerator" msprop:Generator_ColumnVarNameInTable="columnLogoGenerator" msprop:Generator_ColumnPropNameInRow="LogoGenerator" msprop:Generator_ColumnPropNameInTable="LogoGeneratorColumn" msprop:Generator_UserColumnName="LogoGenerator">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="EntryDate" msprop:Generator_ColumnVarNameInTable="columnEntryDate" msprop:Generator_ColumnPropNameInRow="EntryDate" msprop:Generator_ColumnPropNameInTable="EntryDateColumn" msprop:Generator_UserColumnName="EntryDate" type="xs:dateTime" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ListOwner" msprop:Generator_TableClassName="ListOwnerDataTable" msprop:Generator_TableVarName="tableListOwner" msprop:Generator_TablePropName="ListOwner" msprop:Generator_RowDeletingName="ListOwnerRowDeleting" msprop:Generator_UserTableName="ListOwner" msprop:Generator_RowChangingName="ListOwnerRowChanging" msprop:Generator_RowEvHandlerName="ListOwnerRowChangeEventHandler" msprop:Generator_RowDeletedName="ListOwnerRowDeleted" msprop:Generator_RowEvArgName="ListOwnerRowChangeEvent" msprop:Generator_RowChangedName="ListOwnerRowChanged" msprop:Generator_RowClassName="ListOwnerRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="OwnerID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnOwnerID" msprop:Generator_ColumnPropNameInRow="OwnerID" msprop:Generator_ColumnPropNameInTable="OwnerIDColumn" msprop:Generator_UserColumnName="OwnerID" type="xs:int" />
              <xs:element name="Description" msprop:Generator_ColumnVarNameInTable="columnDescription" msprop:Generator_ColumnPropNameInRow="Description" msprop:Generator_ColumnPropNameInTable="DescriptionColumn" msprop:Generator_UserColumnName="Description">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="LogoGenerator" msprop:Generator_ColumnVarNameInTable="columnLogoGenerator" msprop:Generator_ColumnPropNameInRow="LogoGenerator" msprop:Generator_ColumnPropNameInTable="LogoGeneratorColumn" msprop:Generator_UserColumnName="LogoGenerator">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="EntryDate" msprop:Generator_ColumnVarNameInTable="columnEntryDate" msprop:Generator_ColumnPropNameInRow="EntryDate" msprop:Generator_ColumnPropNameInTable="EntryDateColumn" msprop:Generator_UserColumnName="EntryDate" type="xs:dateTime" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ListProduct" msprop:Generator_TableClassName="ListProductDataTable" msprop:Generator_TableVarName="tableListProduct" msprop:Generator_TablePropName="ListProduct" msprop:Generator_RowDeletingName="ListProductRowDeleting" msprop:Generator_UserTableName="ListProduct" msprop:Generator_RowChangingName="ListProductRowChanging" msprop:Generator_RowEvHandlerName="ListProductRowChangeEventHandler" msprop:Generator_RowDeletedName="ListProductRowDeleted" msprop:Generator_RowEvArgName="ListProductRowChangeEvent" msprop:Generator_RowChangedName="ListProductRowChanged" msprop:Generator_RowClassName="ListProductRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ProductID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnProductID" msprop:Generator_ColumnPropNameInRow="ProductID" msprop:Generator_ColumnPropNameInTable="ProductIDColumn" msprop:Generator_UserColumnName="ProductID" type="xs:int" />
              <xs:element name="Description" msprop:Generator_ColumnVarNameInTable="columnDescription" msprop:Generator_ColumnPropNameInRow="Description" msprop:Generator_ColumnPropNameInTable="DescriptionColumn" msprop:Generator_UserColumnName="Description">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="LogoGenerator" msprop:Generator_ColumnVarNameInTable="columnLogoGenerator" msprop:Generator_ColumnPropNameInRow="LogoGenerator" msprop:Generator_ColumnPropNameInTable="LogoGeneratorColumn" msprop:Generator_UserColumnName="LogoGenerator">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="EntryDate" msprop:Generator_ColumnVarNameInTable="columnEntryDate" msprop:Generator_ColumnPropNameInRow="EntryDate" msprop:Generator_ColumnPropNameInTable="EntryDateColumn" msprop:Generator_UserColumnName="EntryDate" type="xs:dateTime" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ListLogo" msprop:Generator_TableClassName="ListLogoDataTable" msprop:Generator_TableVarName="tableListLogo" msprop:Generator_TablePropName="ListLogo" msprop:Generator_RowDeletingName="ListLogoRowDeleting" msprop:Generator_UserTableName="ListLogo" msprop:Generator_RowChangingName="ListLogoRowChanging" msprop:Generator_RowEvHandlerName="ListLogoRowChangeEventHandler" msprop:Generator_RowDeletedName="ListLogoRowDeleted" msprop:Generator_RowEvArgName="ListLogoRowChangeEvent" msprop:Generator_RowChangedName="ListLogoRowChanged" msprop:Generator_RowClassName="ListLogoRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="LogoID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnLogoID" msprop:Generator_ColumnPropNameInRow="LogoID" msprop:Generator_ColumnPropNameInTable="LogoIDColumn" msprop:Generator_UserColumnName="LogoID" type="xs:int" />
              <xs:element name="Description" msprop:Generator_ColumnVarNameInTable="columnDescription" msprop:Generator_ColumnPropNameInRow="Description" msprop:Generator_ColumnPropNameInTable="DescriptionColumn" msprop:Generator_UserColumnName="Description">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="LogoGenerator" msprop:Generator_ColumnVarNameInTable="columnLogoGenerator" msprop:Generator_ColumnPropNameInRow="LogoGenerator" msprop:Generator_ColumnPropNameInTable="LogoGeneratorColumn" msprop:Generator_UserColumnName="LogoGenerator">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="EntryDate" msprop:Generator_ColumnVarNameInTable="columnEntryDate" msprop:Generator_ColumnPropNameInRow="EntryDate" msprop:Generator_ColumnPropNameInTable="EntryDateColumn" msprop:Generator_UserColumnName="EntryDate" type="xs:dateTime" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ListStaffName" msprop:Generator_TableClassName="ListStaffNameDataTable" msprop:Generator_TableVarName="tableListStaffName" msprop:Generator_TablePropName="ListStaffName" msprop:Generator_RowDeletingName="ListStaffNameRowDeleting" msprop:Generator_UserTableName="ListStaffName" msprop:Generator_RowChangingName="ListStaffNameRowChanging" msprop:Generator_RowEvHandlerName="ListStaffNameRowChangeEventHandler" msprop:Generator_RowDeletedName="ListStaffNameRowDeleted" msprop:Generator_RowEvArgName="ListStaffNameRowChangeEvent" msprop:Generator_RowChangedName="ListStaffNameRowChanged" msprop:Generator_RowClassName="ListStaffNameRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="StaffID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnStaffID" msprop:Generator_ColumnPropNameInRow="StaffID" msprop:Generator_ColumnPropNameInTable="StaffIDColumn" msprop:Generator_UserColumnName="StaffID" type="xs:int" />
              <xs:element name="Description" msprop:Generator_ColumnVarNameInTable="columnDescription" msprop:Generator_ColumnPropNameInRow="Description" msprop:Generator_ColumnPropNameInTable="DescriptionColumn" msprop:Generator_UserColumnName="Description">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="DescriptionOfficial" msprop:Generator_ColumnVarNameInTable="columnDescriptionOfficial" msprop:Generator_ColumnPropNameInRow="DescriptionOfficial" msprop:Generator_ColumnPropNameInTable="DescriptionOfficialColumn" msprop:Generator_UserColumnName="DescriptionOfficial">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ListDataStatus" msprop:Generator_TableClassName="ListDataStatusDataTable" msprop:Generator_TableVarName="tableListDataStatus" msprop:Generator_TablePropName="ListDataStatus" msprop:Generator_RowDeletingName="ListDataStatusRowDeleting" msprop:Generator_UserTableName="ListDataStatus" msprop:Generator_RowChangingName="ListDataStatusRowChanging" msprop:Generator_RowEvHandlerName="ListDataStatusRowChangeEventHandler" msprop:Generator_RowDeletedName="ListDataStatusRowDeleted" msprop:Generator_RowEvArgName="ListDataStatusRowChangeEvent" msprop:Generator_RowChangedName="ListDataStatusRowChanged" msprop:Generator_RowClassName="ListDataStatusRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="DataStatusID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnDataStatusID" msprop:Generator_ColumnPropNameInRow="DataStatusID" msprop:Generator_ColumnPropNameInTable="DataStatusIDColumn" msprop:Generator_UserColumnName="DataStatusID" type="xs:int" />
              <xs:element name="Description" msprop:Generator_ColumnVarNameInTable="columnDescription" msprop:Generator_ColumnPropNameInRow="Description" msprop:Generator_ColumnPropNameInTable="DescriptionColumn" msprop:Generator_UserColumnName="Description">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="EntryDate" msprop:Generator_ColumnVarNameInTable="columnEntryDate" msprop:Generator_ColumnPropNameInRow="EntryDate" msprop:Generator_ColumnPropNameInTable="EntryDateColumn" msprop:Generator_UserColumnName="EntryDate" type="xs:dateTime" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ListCoil" msprop:Generator_TableClassName="ListCoilDataTable" msprop:Generator_TableVarName="tableListCoil" msprop:Generator_TablePropName="ListCoil" msprop:Generator_RowDeletingName="ListCoilRowDeleting" msprop:Generator_UserTableName="ListCoil" msprop:Generator_RowChangingName="ListCoilRowChanging" msprop:Generator_RowEvHandlerName="ListCoilRowChangeEventHandler" msprop:Generator_RowDeletedName="ListCoilRowDeleted" msprop:Generator_RowEvArgName="ListCoilRowChangeEvent" msprop:Generator_RowChangedName="ListCoilRowChanged" msprop:Generator_RowClassName="ListCoilRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="CoilID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnCoilID" msprop:Generator_ColumnPropNameInRow="CoilID" msprop:Generator_ColumnPropNameInTable="CoilIDColumn" msprop:Generator_UserColumnName="CoilID" type="xs:int" />
              <xs:element name="Description" msprop:Generator_ColumnVarNameInTable="columnDescription" msprop:Generator_ColumnPropNameInRow="Description" msprop:Generator_ColumnPropNameInTable="DescriptionColumn" msprop:Generator_UserColumnName="Description">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="EntryDate" msprop:Generator_ColumnVarNameInTable="columnEntryDate" msprop:Generator_ColumnPropNameInRow="EntryDate" msprop:Generator_ColumnPropNameInTable="EntryDateColumn" msprop:Generator_UserColumnName="EntryDate" type="xs:dateTime" />
              <xs:element name="Remarks" msprop:Generator_ColumnVarNameInTable="columnRemarks" msprop:Generator_ColumnPropNameInRow="Remarks" msprop:Generator_ColumnPropNameInTable="RemarksColumn" msprop:Generator_UserColumnName="Remarks">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="PublicTableUpload" msprop:Generator_TableClassName="PublicTableUploadDataTable" msprop:Generator_TableVarName="tablePublicTableUpload" msprop:Generator_TablePropName="PublicTableUpload" msprop:Generator_RowDeletingName="PublicTableUploadRowDeleting" msprop:Generator_UserTableName="PublicTableUpload" msprop:Generator_RowChangingName="PublicTableUploadRowChanging" msprop:Generator_RowEvHandlerName="PublicTableUploadRowChangeEventHandler" msprop:Generator_RowDeletedName="PublicTableUploadRowDeleted" msprop:Generator_RowEvArgName="PublicTableUploadRowChangeEvent" msprop:Generator_RowChangedName="PublicTableUploadRowChanged" msprop:Generator_RowClassName="PublicTableUploadRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TableID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnTableID" msprop:Generator_ColumnPropNameInRow="TableID" msprop:Generator_ColumnPropNameInTable="TableIDColumn" msprop:Generator_UserColumnName="TableID" type="xs:int" />
              <xs:element name="TableName" msprop:Generator_ColumnVarNameInTable="columnTableName" msprop:Generator_ColumnPropNameInRow="TableName" msprop:Generator_ColumnPropNameInTable="TableNameColumn" msprop:Generator_UserColumnName="TableName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ListEmployee" msprop:Generator_TableClassName="ListEmployeeDataTable" msprop:Generator_TableVarName="tableListEmployee" msprop:Generator_TablePropName="ListEmployee" msprop:Generator_RowDeletingName="ListEmployeeRowDeleting" msprop:Generator_UserTableName="ListEmployee" msprop:Generator_RowChangingName="ListEmployeeRowChanging" msprop:Generator_RowEvHandlerName="ListEmployeeRowChangeEventHandler" msprop:Generator_RowDeletedName="ListEmployeeRowDeleted" msprop:Generator_RowEvArgName="ListEmployeeRowChangeEvent" msprop:Generator_RowChangedName="ListEmployeeRowChanged" msprop:Generator_RowClassName="ListEmployeeRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="EmployeeID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnEmployeeID" msprop:Generator_ColumnPropNameInRow="EmployeeID" msprop:Generator_ColumnPropNameInTable="EmployeeIDColumn" msprop:Generator_UserColumnName="EmployeeID" type="xs:int" />
              <xs:element name="Description" msprop:Generator_ColumnVarNameInTable="columnDescription" msprop:Generator_ColumnPropNameInRow="Description" msprop:Generator_ColumnPropNameInTable="DescriptionColumn" msprop:Generator_UserColumnName="Description">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="EntryDate" msprop:Generator_ColumnVarNameInTable="columnEntryDate" msprop:Generator_ColumnPropNameInRow="EntryDate" msprop:Generator_ColumnPropNameInTable="EntryDateColumn" msprop:Generator_UserColumnName="EntryDate" type="xs:dateTime" />
              <xs:element name="Remarks" msprop:Generator_ColumnVarNameInTable="columnRemarks" msprop:Generator_ColumnPropNameInRow="Remarks" msprop:Generator_ColumnPropNameInTable="RemarksColumn" msprop:Generator_UserColumnName="Remarks">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Password" msprop:Generator_ColumnVarNameInTable="columnPassword" msprop:Generator_ColumnPropNameInRow="Password" msprop:Generator_ColumnPropNameInTable="PasswordColumn" msprop:Generator_UserColumnName="Password">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="UserID" msprop:Generator_ColumnVarNameInTable="columnUserID" msprop:Generator_ColumnPropNameInRow="UserID" msprop:Generator_ColumnPropNameInTable="UserIDColumn" msprop:Generator_UserColumnName="UserID" type="xs:int" />
              <xs:element name="UserOrganizationID" msprop:Generator_ColumnVarNameInTable="columnUserOrganizationID" msprop:Generator_ColumnPropNameInRow="UserOrganizationID" msprop:Generator_ColumnPropNameInTable="UserOrganizationIDColumn" msprop:Generator_UserColumnName="UserOrganizationID" type="xs:int" />
              <xs:element name="EntryStatusID" msprop:Generator_ColumnVarNameInTable="columnEntryStatusID" msprop:Generator_ColumnPropNameInRow="EntryStatusID" msprop:Generator_ColumnPropNameInTable="EntryStatusIDColumn" msprop:Generator_UserColumnName="EntryStatusID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ListCategory" />
      <xs:field xpath="mstns:CategoryID" />
    </xs:unique>
    <xs:unique name="ListFactory_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ListFactory" />
      <xs:field xpath="mstns:FactoryID" />
    </xs:unique>
    <xs:unique name="ListOwner_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ListOwner" />
      <xs:field xpath="mstns:OwnerID" />
    </xs:unique>
    <xs:unique name="ListProduct_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ListProduct" />
      <xs:field xpath="mstns:ProductID" />
    </xs:unique>
    <xs:unique name="ListLogo_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ListLogo" />
      <xs:field xpath="mstns:LogoID" />
    </xs:unique>
    <xs:unique name="ListStaffName_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ListStaffName" />
      <xs:field xpath="mstns:StaffID" />
    </xs:unique>
    <xs:unique name="ListDataStatus_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ListDataStatus" />
      <xs:field xpath="mstns:DataStatusID" />
    </xs:unique>
    <xs:unique name="ListCoil_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ListCoil" />
      <xs:field xpath="mstns:CoilID" />
    </xs:unique>
    <xs:unique name="PublicTableUpload_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:PublicTableUpload" />
      <xs:field xpath="mstns:TableID" />
    </xs:unique>
    <xs:unique name="ListEmployee_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ListEmployee" />
      <xs:field xpath="mstns:EmployeeID" />
    </xs:unique>
  </xs:element>
</xs:schema>